# Generated by Django 3.2.5 on 2022-09-12 04:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tutor', '0025_leaveticket'),
    ]

    operations = [
        migrations.CreateModel(
            name='Orientation9',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question1', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(0, 'On a remote call with the student, the tutor is dressed business casual. They have their camera on. Their background is blurred out. There is no more than a fist of space above the head in camera view. They look at the student as they are speaking, and their hands are at their side.'), (1, 'On a remote call with the student, the tutor is wearing a plain T-shirt. There is no more than a fist of space above the head in camera view. You can see their apartment. They sometimes turn off the camera, but typically have it on and are looking at the student when they are speaking, and their hands are at their side.'), (2, 'On a remote call with the student, the tutor is wearing a business suit. The tutor is sitting further away from the camera. Their arms are folded as they speak, and they often look to the side when the student is speaking.'), (3, 'In an in-person session with the student, the tutor is wearing a tank top. The tutor is sitting across the table from a student, and is switching between checking their phone and then asking the student questions on their assignment.'), (4, "In an in-person session with the student, the tutor is dressed business casual. The tutor is sitting on the same side as the student. The tutor respects the students space, and also doesn't control the students material. They are looking at the student when they speak, and are looking at the material as the student works on the problem.")], max_length=9, null=True)),
                ('question2', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(0, "The student brings in an assignment where the teacher gave them an F. The tutor spends the session highlighting pieces of their work where they went wrong, and said that the student must change how they do assignments in the future. The student attemps to explain their reasoning, but the tutor cuts them off as the session is only an hour long and there is a lot of material in the student's work that needs to be corrected"), (1, "The student brings in an assignment where the teacher said the work needs revision. The tutor starts off by asking the student what they understand the assignment to require. The student answers, but its clear that they don't fully understand what is required, so the tutor asks questions focusing on the concepts involved"), (2, "The student comes to the session crying, because the teacher gave them an F on their test and they had the student make their parents sign the test and then give it back to the instructor. The student starts off the session saying how they were also bad with the concept, and the test reinforces that perception. The tutor allows the student to talk, and then goes on to explain that this in not a reflection of the student's future potential with the material. The tutor goes on to say that no one has mastery in the beginning, and it requires time and practice to see permenant improvement. The tutor encourages the student to not give up, and to use the test as an opportunity to identify what can be worked on to improve"), (3, 'A college student or adult learner comes in to the session, and says that the instructor gave them no homework. The tutor asks the student if there are any tests or quizzes coming up, and if they want to prepare for that. The student shows disinterest in the material. The tutor asks them what their long term goals are, and talks about how this class fits into that long term goal.'), (4, "A K - 12 student comes into the session. They say that their parent/program made them sign up for tutoring and they don't feel that they need support. The tutor then asks the student how they performed on their last grade. The student says they don't remember, so the tutor asks them if there is anything from the subject matter that is confusing them. The students says no, and the tutor responds with that's okay. Tutoring isn't about just dealing with issues in understanding material. It is also about enriching their understanding of the topic. If it's a STEM subject, the tutor has the student select an intermediate or hard question that the student needs to walk the tutor through. If its a writing tutorial, the student can do some freewriting for the tutor to review."), (5, "The student comes in to the session, and says that the instructor gave them no homework. The tutor asks what the student would like to work on, and the student says that they don't have anything. The tutor decides that, because there is no material to work on, they will end the session early and meet the student again next week")], max_length=11, null=True)),
                ('completed', models.DateTimeField(blank=True, default=None, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Orientation8',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question1', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(0, "Confirm that the time scheduled works for you. If it doesn't, decline the meeting"), (1, 'Send the student an email introducing yourself'), (2, 'Send the student information to join the session'), (3, 'Ask the student for information regarding what they would like to work on before the session'), (4, 'Ask student for their address, and visit them in-person to facilitate the first session')], max_length=9, null=True)),
                ('question2', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(0, 'Start the clock in on the tutor portal'), (1, 'Introduce yourself and give them a little of your academic background'), (2, "Ask the student if they have participated in The City Tutors' cost-sharing to provide services to the entire city in order for the session to continue"), (3, 'Ask the student to introduce themselves, and what they want to improve on'), (4, 'Exchange preferred contact information')], max_length=9, null=True)),
                ('completed', models.DateTimeField(blank=True, default=None, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Orientation7',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question1', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(0, 'Solid internet connection'), (1, 'Ipad/tablet to screenshare on'), (2, 'Quiet Space'), (3, 'Working Video camera')], max_length=7, null=True)),
                ('question2', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(0, 'Create a collaborative whiteboard that we can write problems on or upload the pictures that the student shared to'), (1, 'Inform the tutee that a successful tutorial session requires a device that they can participate in the session with, and to reschedule once they have procured that'), (2, 'Use probing questions to have the tutee clarify their understanding of concepts, and guide them when needed'), (3, 'Annotate what the tutee says on any collaborative work for their review outside of the session')], max_length=7, null=True)),
                ('completed', models.DateTimeField(blank=True, default=None, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Orientation6',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question1', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(0, 'Show the tutee a video you found that explains the concept'), (1, "Clear the entire session's schedule to focus on the concept. Do not move on until the student has achieved mastery"), (2, 'Enhance their understanding by asking relevant probing questions to promote reflection and guide their thinking towards an understanding of the concepts'), (3, 'Direct the tutee to an online article you found that can help him/her understand the concepts')], max_length=7, null=True)),
                ('question2', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(0, 'Help the tutee make a study schedule where he/she reviews the concept at regular intervals'), (1, 'Revisit the concept in your tutoring sessions from time to time'), (2, 'Move on to new material, and ignore past concepts'), (3, 'Go over their performance on the test in your session and reiterate the tuteeâ€™s understanding of the concept')], max_length=7, null=True)),
                ('completed', models.DateTimeField(blank=True, default=None, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Orientation5',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question1', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(0, 'Help build the tuteesâ€™ confidence and help them achieve learning autonomy'), (1, 'Provide the support necessary to help the tutees get from where they are to where they want to be'), (2, 'Teach new concepts to the tutees in the subjects that you are tutoring in'), (3, 'Build the tuteesâ€™ critical thinking abilities by engaging in active dialogue'), (4, 'Ensure grade improvment for the student by the end of the semester')], max_length=9, null=True)),
                ('question2', models.IntegerField(blank=True, choices=[(0, 'You complete the assignment and send it to the tutee'), (1, 'You respond by saying that you can help the tutee in your next tutoring session to review the assignment and provide guidance on how to complete it'), (2, 'You ask the tutee to ask someone else to complete it for them'), (3, 'Ignore the tutee')], null=True)),
                ('completed', models.DateTimeField(blank=True, default=None, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Orientation4',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question1', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(0, 'Notify your tutee via email in advance'), (1, 'Provide a detailed explanation of the reason for your absence'), (2, 'Ask your tutee for alternate days/times to reschedule the missed session'), (3, 'Inform your tutee after you missed the scheduled session')], max_length=7, null=True)),
                ('question2', models.IntegerField(blank=True, choices=[(0, 'Announce in the group session that the tutee failed the school math test'), (1, 'Send the tutee an email expressing your disappointment and frustration'), (2, 'Respond privately and set up a time to meet the tutee individually to better understand why he/she failed the test'), (3, 'Respond to the tuteeâ€™s email by asking the tutee to do better next time')], null=True)),
                ('completed', models.DateTimeField(blank=True, default=None, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Orientation3',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question1', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(0, "Change your available hours to 0 in the 'Settings' tab"), (1, "Cancel confirmation for the scheduled session in the 'Meetings' tab"), (2, "Use the student's contact information to inform them that you can't make the session"), (3, 'None of the above')], max_length=7, null=True)),
                ('question2', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(0, 'Learn biology concepts in order to help the student'), (1, 'Direct the student to the student portal and have them place a request for a biology tutor'), (2, 'Tell the student to talk with their biology instructor and have them ask for school related resources to help the student'), (3, 'Tell the student you canâ€™t help with anything outside of the subject you have signed up to support.')], max_length=7, null=True)),
                ('completed', models.DateTimeField(blank=True, default=None, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Orientation2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question1', models.IntegerField(blank=True, choices=[(0, 'Socio-economic roadblocks and a lack of public investment'), (1, 'Socio-economic roadblocks and lack of private investment'), (2, 'Socio-emotional roadblocks and lack of public investment'), (3, 'Socio-emotional roadblocks and lack of private investment')], null=True)),
                ('question2', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(0, 'Flexibility and availability for drop-in sessions'), (1, 'Provides both remediation and enrichment support'), (2, 'Potential for working with other programs that serve students'), (3, "Data tracking and sharing information with stakeholders in a student's learning development (instructors, program managers, advisors, etc)."), (4, 'Tutor training in alignment with minimalism best practices (the student is the driver; enhances learning autonomy and learning confidence).')], max_length=9, null=True)),
                ('completed', models.DateTimeField(blank=True, default=None, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Orientation11',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question1', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(0, 'Minimalism requires the tutor to always be hands-off. If the student is stuck, it is always valuable to keep asking questions. Students will eventually be able to solve the problem on their own.'), (1, 'It requires tutors to start by asking the student questions about what they know'), (2, "When students say they don't know what to do next, minimalism has the tutor ask questions to see if the student can get to the next stage of the problem"), (3, 'If student cannot continue with the problem after the tutor asked them questions, minimalism requires the tutor to provide a model for them a problem solving strategy that the student can apply to their own problem')], max_length=7, null=True)),
                ('question2', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(0, 'Help the student to develop strategies for annotating texts, and taking notes in class'), (1, 'Help the student to develop a time management strategy for studying the material'), (2, 'Help the student to reflect on commonly recurring issues within their knowledge of concepts, or application of problem solving stratgies'), (3, 'Help the student to develop a discrete means of contacting the tutor for answers should they need help during tests or exams (Available only to students who have subscribed to The City Tutors Plus service)')], max_length=7, null=True)),
                ('completed', models.DateTimeField(blank=True, default=None, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Orientation10',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question1', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(0, 'Ask the student(s) to recap what they took away from the session'), (1, "Remind student or student's parent to go to the City Tutors' website, and use the 'donate' button in order to continue receiving services in the future"), (2, 'You recap what was discussed in the session'), (3, 'Ask the student(s) if they want to have another session.'), (4, 'Clock Out on the tutor Portal')], max_length=9, null=True)),
                ('question2', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(0, 'Remind them that they can request support in the future through their student portal'), (1, 'Remind them to fill out an exit ticket that will be sent over the student portal'), (2, 'Have the student tell 2-5 friends about the tutoring service, and have them create accounts and register to receive tutoring support'), (3, "If your preferences for tutoring have changed as a result of the student no longer having sessions with you, update the 'settings' tab in your tutor portal")], max_length=7, null=True)),
                ('completed', models.DateTimeField(blank=True, default=None, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Orientation1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question1', models.IntegerField(blank=True, choices=[(0, 'After completing this training module'), (1, 'After completing all training modules'), (2, 'After completing background check'), (3, 'After completing first tutoring session')], null=True)),
                ('question2', models.IntegerField(blank=True, choices=[(0, 'Student Transcript + Letter of Reference + Parental Consent'), (1, 'Student Transcript + Background check'), (2, 'Letter of Employment Verification + Background Check'), (3, 'Professional Letter of Reference + Background Check')], null=True)),
                ('occupation', models.IntegerField(blank=True, default=5, null=True)),
                ('completed', models.DateTimeField(blank=True, default=None, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LiveSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('q1', models.TextField(blank=True, default='', null=True, verbose_name='What do you see as the role of the tutor? How do you see yourself as a tutor?')),
                ('q2', models.TextField(blank=True, null=True, verbose_name='Recall the two modules below:\n        1. Ethics and professionalism\n        2. Role of the Tutor\n        Choose one, and:Identify 3-4 characteristics, elements, or key points')),
                ('q3', models.TextField(blank=True, null=True, verbose_name='Explain how this topic impacts your practice as a tutor.')),
                ('q4', models.TextField(blank=True, null=True, verbose_name='What did you work on? What difficulties were you experiencing in the session, and how would you rate the studentâ€™s ability to complete the assignment on their own?')),
                ('q5', models.TextField(blank=True, null=True, verbose_name='What strategies did you use to keep the session on track?')),
                ('q6', models.TextField(blank=True, null=True, verbose_name='What could you have done better?')),
                ('q7', models.TextField(blank=True, null=True, verbose_name='What was easy? What went well?')),
                ('q8', models.TextField(blank=True, null=True, verbose_name='What was difficult? What could be improved?')),
                ('q9', models.TextField(blank=True, null=True, verbose_name='Where would you like more support? What kind of support would you like to receive?')),
                ('completed', models.DateTimeField(blank=True, default=None, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
