# Generated by Django 3.2.5 on 2022-02-17 21:56

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tutor', '0002_manual'),
    ]

    operations = [
        migrations.AddField(
            model_name='profile',
            name='orientation_trainer',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='profile',
            name='roleplay_trainer',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='profile',
            name='tutor_training_trainer',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='profile',
            name='tutoring_reason',
            field=models.CharField(default=None, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='roleplaytraining',
            name='overall_quality_rating',
            field=models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='On a scale of 1-5, how would you rate the overall quality of the training?'),
        ),
        migrations.AddField(
            model_name='roleplaytraining',
            name='suggestions',
            field=models.TextField(default='', verbose_name='What suggestions would you have for future training?'),
        ),
        migrations.AddField(
            model_name='roleplaytraining',
            name='training_practical',
            field=models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='On a scale of 1-5, how practical was the training?'),
        ),
        migrations.AddField(
            model_name='roleplaytraining',
            name='tutor_trainer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='roleplay_training_form', to='tutor.profile', verbose_name='Who was your tutor trainer?'),
        ),
        migrations.AddField(
            model_name='roleplaytraining',
            name='tutor_trainer_rating',
            field=models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='On a scale of 1-5, how knowledgeable was your trainer?'),
        ),
        migrations.AddField(
            model_name='subject',
            name='offered',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='tutortraining',
            name='overall_quality_rating',
            field=models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='On a scale of 1-5, how would you rate the overall quality of the training?'),
        ),
        migrations.AddField(
            model_name='tutortraining',
            name='suggestions',
            field=models.TextField(default='', verbose_name='What suggestions would you have for future training?'),
        ),
        migrations.AddField(
            model_name='tutortraining',
            name='training_practical',
            field=models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='On a scale of 1-5, how practical was the training?'),
        ),
        migrations.AddField(
            model_name='tutortraining',
            name='tutor_trainer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tutor_training_form', to='tutor.profile', verbose_name='Who was your tutor trainer?'),
        ),
        migrations.AddField(
            model_name='tutortraining',
            name='tutor_trainer_rating',
            field=models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='On a scale of 1-5, how knowledgeable was your trainer?'),
        ),
        migrations.AlterField(
            model_name='issue',
            name='assigned_staff',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_issues', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='issue',
            name='related_user',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='issue_reports', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='issue',
            name='submitter',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submitter', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='meeting',
            name='follow_up_meeting',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tutor.meeting'),
        ),
        migrations.AlterField(
            model_name='meeting',
            name='scheduled_time_slot',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tutor.timeslot'),
        ),
        migrations.AlterField(
            model_name='meeting',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='tutor.subject'),
        ),
        migrations.AlterField(
            model_name='orientationtraining',
            name='suggestions',
            field=models.TextField(default='', verbose_name='What suggestions would you have for future training?'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='account_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='tutor.accounttype'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='available',
            field=models.ManyToManyField(blank=True, help_text='Hold control or command to select multiple', to='tutor.TimeSlot'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='ethnicity',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tutor.ethnicity'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='gender',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tutor.gender'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='nickname',
            field=models.CharField(blank=True, default=None, help_text="This is how other users will see you. If you don't have a nickname, enter your first name or leave blank", max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='profile',
            name='offered_hours',
            field=models.IntegerField(blank=True, default=0, help_text='Number of hours you can tutor weekly', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)]),
        ),
        migrations.AlterField(
            model_name='profile',
            name='pronouns',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tutor.pronouns'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='sector',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tutee', to='tutor.sector'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='site',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tutor.site'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='site_location',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tutor.sitelocation'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='tutee_contact',
            field=models.TextField(default=None, help_text='Students will see this message from the meeting details page', null=True),
        ),
        migrations.AlterField(
            model_name='tutorrequest',
            name='meeting',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tutor.meeting'),
        ),
        migrations.AlterField(
            model_name='tutorrequest',
            name='notes',
            field=models.TextField(default=None, help_text='Your tutor will be able to see this note', null=True, verbose_name='What do you need help with?'),
        ),
    ]
