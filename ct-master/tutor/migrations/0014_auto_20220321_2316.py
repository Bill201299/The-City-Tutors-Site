# Generated by Django 3.2.5 on 2022-03-22 03:16

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tutor', '0013_auto_20220317_1928'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExitTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed', models.DateTimeField(blank=True, default=None, null=True)),
                ('request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='tutor.tutorrequest')),
                ('tutor', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ticket_tutor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GradeLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ExitTicketDifficult',
            fields=[
                ('exitticket_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='tutor.exitticket')),
                ('confidence', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(7)], verbose_name='How confident do you feel in the subject area you requested support with?')),
                ('tutor_satisfaction', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='What is your overall satisfaction with the tutor?')),
                ('satisfaction_reason', models.TextField(blank=True, default=None, null=True, verbose_name='If you rated the tutor 2 or below for the question above, please provide any additional comments here')),
                ('tutor_helpful', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='What is your overall satisfaction with the tutor?')),
                ('helpful_reason', models.TextField(blank=True, default=None, null=True, verbose_name='If you rated the tutor 2 or below for the question above, please provide any additional comments here')),
                ('tutor_comfortable', models.IntegerField(default=None, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='How comfortable/connected did you feel with the tutor?')),
                ('comfortable_reason', models.TextField(blank=True, default=None, null=True, verbose_name='If you rated the tutor 2 or below for the question above, please provide any additional comments here')),
                ('still_help', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, verbose_name='Do you still need help with any concepts/problems?')),
                ('help_concepts', models.TextField(blank=True, default=None, null=True, verbose_name='If you said yes to the above question, what concepts/problems do you need help with?')),
                ('recommendations', models.TextField(blank=True, default=None, null=True, verbose_name='Do you have any recommendations on how we can improve the tutoring experience in the future?')),
                ('thank_letter_yesno', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, verbose_name='Have you sent a thank you email to the tutor?')),
                ('thank_letter', models.TextField(blank=True, default=None, null=True, verbose_name="If you haven't sent an email yet, use the space here to write the thank you email you'll send them. We will forward it for you.")),
                ('additional_comments', models.TextField(blank=True, default=None, null=True, verbose_name='Any additional comments?')),
            ],
            options={
                'verbose_name': 'exit ticket (difficult)',
                'verbose_name_plural': 'exit tickets (difficult)',
            },
            bases=('tutor.exitticket',),
        ),
        migrations.CreateModel(
            name='ExitTicketEasy',
            fields=[
                ('exitticket_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='tutor.exitticket')),
                ('like_tutor', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], verbose_name='I like the tutor.')),
                ('safe_mistakes', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], verbose_name='I feel safe to make mistakes in the tutorial.')),
                ('tutor_helps', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], verbose_name='When I donâ€™t understand something, my tutor helps me.')),
                ('understand_better', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], verbose_name='I understand better when I work with the tutor.')),
            ],
            options={
                'verbose_name': 'exit ticket (easy)',
                'verbose_name_plural': 'exit tickets (easy)',
            },
            bases=('tutor.exitticket',),
        ),
        migrations.CreateModel(
            name='ExitTicketMedium',
            fields=[
                ('exitticket_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='tutor.exitticket')),
                ('like_tutor', models.CharField(choices=[('NEVER', 'Never'), ('SOMETIMES', 'Sometimes'), ('ALWAYS', 'Always')], max_length=10, verbose_name='Did you like working with the tutor?')),
                ('be_open', models.CharField(choices=[('NEVER', 'Never'), ('SOMETIMES', 'Sometimes'), ('ALWAYS', 'Always')], max_length=10, verbose_name='Do you feel you can be open with the material you are having difficulty with in the tutorial session?')),
                ('tutor_help', models.CharField(choices=[('NEVER', 'Never'), ('SOMETIMES', 'Sometimes'), ('ALWAYS', 'Always')], max_length=10, verbose_name='When you are having difficulty with an assignment, does the tutor help you?')),
                ('better_understand', models.CharField(choices=[('NEVER', 'Never'), ('SOMETIMES', 'Sometimes'), ('ALWAYS', 'Always')], max_length=10, verbose_name='Do you feel you better understand the material as a result of working with the tutor?')),
            ],
            options={
                'verbose_name': 'exit ticket (medium)',
                'verbose_name_plural': 'exit tickets (medium)',
            },
            bases=('tutor.exitticket',),
        ),
        migrations.AddField(
            model_name='profile',
            name='grade_level',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='tutor.gradelevel'),
        ),
    ]
